# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type BankDetails {
  createdAt: DateTime!
  id: Float!
  modifiedAt: DateTime!
  stripeDetails: String!
  user: User!
}

type CarbonData {
  category: Category
  categoryString: String!
  consumption: Float!
  createdAt: DateTime!
  id: Float!
  modifiedAt: DateTime!
  title: String!
  user: User!
}

type Category {
  carbonData: [CarbonData!]!
  categoryId: Float!
  title: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Donation {
  Id: Float!
  amount: Float!
  created_at: DateTime!
  user: User!
}

type Mutation {
  acceptFriendRequest(id: Float!): String!
  addUserToGroup(groupeId: Float!, userId: Float!): String!
  checkoutDonation(userid: Float!): String!
  checkoutSuccess(sessionId: String!, userid: Float!): String!
  createBankDetails(stripeDetails: String!, userId: Float!): String!
  createCarbonData(category: String!, consumption: Float!, title: String!, userId: Float!): String!
  createCategory(title: String!): String!
  createUser(email: String!, firstname: String!, lastname: String!, password: String!): String!
  createUserGroupe(title: String!, userId: Float!): String!
  deleteBankDetails(id: Float!): String!
  deleteCarbonData(id: Float!): String!
  deleteCategory(categoryId: Float!): String!
  deleteDonation(id: Float!): String!
  deleteFriendRequest(id: Float!): String!
  deleteUser(userId: Float!): String!
  deleteUserGroupe(id: Float!): String!
  pubSubMutation(id: Float!, message: String, username: String): Boolean!
  pubSubMutationToDynamicTopic(id: Float!, message: String, topic: String!, username: String): Boolean!
  publisherMutation(id: Float!, message: String, username: String): Boolean!
  removeUserFromGroup(groupeId: Float!, userId: Float!): String!
  sendFriendRequest(friendId: Float!, userId: Float!): String!
  subscribeToDynamicTopic(topic: String!, username: String!): Boolean!
  unsubscribeFromDynamicTopic(topic: String!, username: String!): Boolean!
  updateBankDetails(id: Float!, stripeDetails: String!): String!
  updateCarbonData(category: String!, consumption: Float!, id: Float!, title: String!): String!
  updateCategory(categoryId: Float!, title: String!): String!
  updateDonation(amount: Float!, id: Float!): String!
  updateUser(email: String!, firstname: String!, lastname: String!, totalCo2: Float!, userId: Float!): String!
  updateUserGroupe(id: Float!, title: String!): String!
}

type Notification {
  date: DateTime!
  id: ID!
  message: String
  username: String
}

type Query {
  getAllBankDetails: [BankDetails!]!
  getAllCarbonData: [CarbonData!]!
  getAllCategories: [Category!]!
  getAllDonation: [Donation!]!
  getAllFriendRequest(userId: Float!): [UserFriends!]!
  getAllUserGroupe: [UserGroupe!]!
  getAllUsers: [User!]!
  getBankDetails(id: Float!): BankDetails!
  getCarbonData(id: Float!): CarbonData!
  getCategory(categoryId: Float!): Category!
  getDonation(id: Float!): Donation!
  getFriendRequest(id: Float!): UserFriends!
  getFriends(userId: Float!): [User!]!
  getSubscribedUsers(topic: String!): [SubscribedUsers!]!
  getUser(userId: Float!): User!
  getUserBankDetails(userId: Float!): BankDetails!
  getUserFriendList(userId: Float!): [UserFriends!]!
  getUserFromToken(token: String!): User!
  getUserGroupe(id: Float!): UserGroupe!
  getUsersByName(name: String!): [User!]!
  login(email: String!, password: String!): String!
  refreshToken(token: String!): String!
  verifyToken(token: String!): String!
}

type SubscribedUsers {
  topic: String!
  username: String!
}

type Subscription {
  normalSubscription: Notification!
  subscriptionWithFilterToDynamicTopic(topic: String!): Notification!
}

type User {
  bankDetails: BankDetails!
  carbonData: [CarbonData!]!
  chefGroupe: [UserGroupe!]!
  createdAt: DateTime!
  donation: [Donation!]!
  email: String!
  firstname: String!
  groups: [UserGroupe!]!
  isVerified: Boolean!
  lastname: String!
  modifiedAt: DateTime!
  totalCo2: Float!
  userId: Float!
  userReceiver: [UserFriends!]!
  userSender: [UserFriends!]!
}

type UserFriends {
  accepted: Boolean!
  createdAt: DateTime!
  id: Float!
  userReceiver: User!
  userSender: User!
}

type UserGroupe {
  createdAt: DateTime!
  id: Float!
  members: [User!]!
  modifiedAt: DateTime!
  title: String!
  user: User!
}
